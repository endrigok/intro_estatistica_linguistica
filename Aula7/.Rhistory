setwd("~/Documents/Mahayana/academics/exp/mas_soque/")
library(readxl) # para ler o arquivo xlsx
setwd("~/Documents/Mahayana/academics/exp/mas_soque/")
data <- read_excel("data.xlsx")
setwd("~/Documents/Mahayana/academics/exp/finalizados/mas_soque/")
data <- read_excel("data.xlsx")
data$ano         <- factor(data$ano)
data$sexo        <- factor(data$sexo)
data$nome        <- factor(data$nome)
data$pergunta    <- factor(data$pergunta)
data$resposta    <- factor(data$resposta)
data$ms.vs.outros<- factor(data$ms.vs.outros)
data$sq.msq.vs.mas<-factor(data$sq.msq.vs.mas)
data$s.vs.outros  <-factor(data$s.vs.outros)
data = subset(data, resposta == "M" | resposta == "S" | resposta == "MS")
data$ano         <- factor((data$ano), levels = c("sexto", "setimo", "oitavo", "nono"))
data$sexo        <- factor(data$sexo)
data$nome        <- factor(data$nome)
data$pergunta    <- factor(data$pergunta)
data$resposta    <- factor((data$resposta), levels = c("M", "S", "MS"))
data$ms.vs.outros<- factor(data$ms.vs.outros)
data$sq.msq.vs.mas<-factor(data$sq.msq.vs.mas)
data$s.vs.outros  <-factor(data$s.vs.outros)
mydf = data.frame(prop.table(table(data$ano, data$resposta),1))
mydf
ggplot(mydf, aes(Var1, Freq, fill = Var2)) +
geom_bar(position = "stack", stat = "identity")+
scale_fill_manual(values=c("M" = "light blue", "S" = "#46ACC8", "MS" = "#2b8cbe"),
labels=c("Mas", "Só que", "Mas + Só que"))+
theme_bw((base_size = 16))+
labs(x="Ano Escolar", y= "Frequência", fill="Resposta")+
scale_x_discrete(labels=c("sexto" = "Sexto", "setimo" = "Sétimo", "oitavo" = "Oitavo", "nono" = "Nono"))+
scale_y_continuous(labels=scales::percent)
library(ggplot2) # graficos
ggplot(mydf, aes(Var1, Freq, fill = Var2)) +
geom_bar(position = "stack", stat = "identity")+
scale_fill_manual(values=c("M" = "light blue", "S" = "#46ACC8", "MS" = "#2b8cbe"),
labels=c("Mas", "Só que", "Mas + Só que"))+
theme_bw((base_size = 16))+
labs(x="Ano Escolar", y= "Frequência", fill="Resposta")+
scale_x_discrete(labels=c("sexto" = "Sexto", "setimo" = "Sétimo", "oitavo" = "Oitavo", "nono" = "Nono"))+
scale_y_continuous(labels=scales::percent)
mydf2<- data.frame(prop.table(table(data$sexo, data$resposta),1))
mydf2
ggplot(mydf2, aes(Var1, Freq, fill = Var2)) +
geom_bar(position = "stack", stat = "identity")
system.time(fit.ano.int.sexo <- glmer(ms.vs.outros ~ ano*sexo + (1+sexo|pergunta) + (1+sexo|nome), data=data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
mydf <- (data.frame(Evolution=c("pre","post"), Rate=c(0.6003524, 0.7476807), lower=c(0.5468126, 0.6851575), upper=c(0.6591345, 0.8159094)))
ggplot(mydf, aes(Evolution, Rate))+
geom_bar(position = "dodge", stat = "identity", fill = "#006400")+
geom_errorbar(aes(ymin=upper, ymax=lower), width=0.2, size=1, color="black")+
labs(y = "Mean value (voiced obstruents)")+
theme_gameboy()
library(tidyverse)
library(readxl)
library(stringr)
library(lme4)
library(lmerTest)
library(glmmTMB)
library(aods3)
library(AER)
library(RVAideMemoire)
library(kableExtra)
library(reshape2)
library(Rokemon)
Rokemon::import_pokefont()
library(Rokemon)
data = read.csv("~/Documents/Mahayana/academics/exp/pokemonastics/Exp1/data/dataVDs.csv", fileEncoding="LATIN1")
View(data)
data$participant = as.factor(data$participant)
unique(data$participant)
count(data, vars = c("participant"))
participants = data%>%
group_by(participant)%>%
sample_n(1)%>%
droplevels()
mean(participants$age)
sd(participants$age)
length(participants$Qual.seu.g.énero.[participants$Qual.seu.g.énero. == "Masculino"])
length(participants$Qual.seu.g.énero.[participants$Qual.seu.g.énero. == "Feminino"])
str(data)
data%>%
group_by(evolution)%>%
summarise(media.obs=mean(number.obstruents), media.syl=mean(number.syllables), median.obs=median(number.obstruents), median.syl=median(number.syllables))
data%>%
group_by(evolution)%>%
summarise(media.obs=mean(number.obstruents), media.syl=mean(number.syllables), median.obs=median(number.obstruents), median.syl=median(number.syllables))
data = read.csv("~/Documents/Mahayana/academics/exp/pokemonastics/Exp1/data/dataVDs.csv", fileEncoding="LATIN1")
data$participant = as.factor(data$participant)
unique(data$participant)
data = data%>%
filter(exclusion == "no")
data%>%
group_by(evolution)%>%
summarise(media.obs=mean(number.obstruents), media.syl=mean(number.syllables), median.obs=median(number.obstruents), median.syl=median(number.syllables))
data%>%
group_by(evolution)%>%
ggplot(., aes(x = number.obstruents))+
geom_histogram(aes(fill=evolution))
data%>%
group_by(evolution, vowel.first)%>%
count()
data%>%
group_by(evolution, vowel.first)%>%
count()
warnings()
data%>%
group_by(evolution, vowel.first)%>%
count()
data%>%
group_by(vowel.first, evolution)%>%
count()
system.time(model.pois <- glmer(number.obstruents ~ evolution + (1|participant) + (1|item), data = data,family=poisson(link=log)))
system.time(model.pois.null <- glmer(number.obstruents ~ 1 + (1|participant) + (1|item), data = data,family=poisson(link=log)))
anova(model.pois, model.pois.null)
summary(model.pois)
gof(model.pois)
overdisp.glmer(model.pois)
overdisp(model.pois)
?gof
?overdisp.glmer
?mean
summary(model.pois)
library(AER)
install.packages("AER")
library(AER)
gof(model.pois)
overdisp.glmer(model.pois)
overdisp(model.pois)
dispersiontest(model.pois)
qqnorm(resid(model.pois))
hist(resid(model.pois))
plot(fitted(model.pois),resid(model.pois))
library("blmeco")
install.packages("blmeco")
library(blmeco)
dispersion_glmer(model.pois)
overdisp_fun <- function(model.pois) {
rdf <- df.residual(model.pois)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(model.pois)
overdisp_fun(model.pois = model.pois)
rdf <- df.residual(model.pois)
overdisp_fun <- function(model.pois) {
rdf <- df.residual(model.pois)
rp <- residuals(model.pois,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
overdisp_fun(model.pois = model.pois)
dispersion_glmer(model.pois)
mydf <- (data.frame(Evolution=c("pre","post"), Rate=c(0.6003524, 0.7476807), lower=c(0.5468126, 0.6851575), upper=c(0.6591345, 0.8159094)))
ggplot(mydf, aes(Evolution, Rate))+
geom_bar(position = "dodge", stat = "identity", fill = "#006400")+
geom_errorbar(aes(ymin=upper, ymax=lower), width=0.2, size=1, color="black")+
labs(y = "Mean value (voiced obstruents)")+
theme_gameboy()
gghealth(mydf, "Evolution", "Rate",
init.size = 5)
system.time(model.ztpois <- glmmTMB(number.syllables ~ evolution + (1|participant) + (1|item), data = data,family=truncated_poisson))
library(glmmTMB)
install.packages("glmmTMB")
system.time(model.ztpois <- glmmTMB(number.syllables ~ evolution + (1|participant) + (1|item), data = data,family=truncated_poisson))
library(glmmTMB)
system.time(model.ztpois <- glmmTMB(number.syllables ~ evolution + (1|participant) + (1|item), data = data,family=truncated_poisson))
system.time(model.ztpois.null <- glmmTMB(number.syllables ~ 1 + (1|participant) + (1|item), data = data,family=truncated_poisson))
anova(model.ztpois, model.ztpois.null)
summary(model.ztpois)
dispersion_glmer(model.ztpois)
overdisp(model.ztpois)
gof(model.ztpois)
gof(model.ztpois)
summary(model.ztpois)
?dispersion_glmer
data$vowel.a.first      = gsub("([a])", "a", ignore.case = TRUE, data$vowel.first)
data$vowel.a.first      = gsub("([eiou])", "other", ignore.case = TRUE, data$vowel.a.first)
unique(data$vowel.a.first)
data%>%
group_by(evolution, vowel.a.first)%>%
count()
data$vowel.a.first <- as.factor(data$vowel.a.first)
data$vowel.a.first <- relevel(data$vowel.a.first, ref = "other")
levels(data$vowel.a.first)
system.time(model.a.first <- glmer(vowel.a.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.a.first.null <- glmer(vowel.a.first ~ 1 + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comparison1 = anova(model.a.first, model.a.first.null)
summary(model.a.first)
system.time(model.a.first <- glmer(vowel.a.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.a.first <- glmer(vowel.a.first ~ evolution + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.a.first.null <- glmer(vowel.a.first ~ 1 + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comparison1 = anova(model.a.first, model.a.first.null)
summary(model.a.first)
anova(model.a.first, model.a.first.null)
summary(model.a.first)
comp1 = anova(model.a.first, model.a.first.null)
data$vowel.e.first      = gsub("([e])", "e", ignore.case = TRUE, data$vowel.first)
data$vowel.e.first      = gsub("([aiou])", "thr", ignore.case = TRUE, data$vowel.e.first)
unique(data$vowel.e.first)
data%>%
group_by(evolution, vowel.e.first)%>%
count()
data$vowel.e.first <- as.factor(data$vowel.e.first)
data$vowel.e.first <- relevel(data$vowel.e.first, ref = "thr")
levels(data$vowel.e.first)
system.time(model.e.first <- glmer(vowel.e.first ~ evolution + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.e.first.null <- glmer(vowel.e.first ~ 1 + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comp2 = anova(model.e.first, model.e.first.null)
data$vowel.i.first      = gsub("([i])", "i", ignore.case = TRUE, data$vowel.first)
data$vowel.i.first      = gsub("([aeou])", "thr", ignore.case = TRUE, data$vowel.i.first)
unique(data$vowel.i.first)
data%>%
group_by(evolution, vowel.i.first)%>%
count()
data$vowel.i.first <- as.factor(data$vowel.i.first)
data$vowel.i.first <- relevel(data$vowel.i.first, ref = "thr")
levels(data$vowel.i.first)
system.time(model.i.first <- glmer(vowel.i.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.i.first <- glmer(vowel.i.first ~ evolution + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.i.first.null <- glmer(vowel.i.first ~ 1 + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
anova(model.i.first, model.i.first.null)
comp3 = anova(model.i.first, model.i.first.null)
names(comp3)
summary(model.i.first)
data$vowel.o.first      = gsub("([o])", "o", ignore.case = TRUE, data$vowel.first)
data$vowel.o.first      = gsub("([aeiu])", "thr", ignore.case = TRUE, data$vowel.o.first)
unique(data$vowel.o.first)
data%>%
group_by(evolution, vowel.o.first)%>%
count()
data$vowel.o.first <- as.factor(data$vowel.o.first)
data$vowel.o.first <- relevel(data$vowel.o.first, ref = "thr")
levels(data$vowel.o.first)
system.time(model.o.first <- glmer(vowel.o.first ~ evolution + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.o.first.null <- glmer(vowel.o.first ~ 1 + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comp4 = anova(model.o.first, model.o.first.null)
data$vowel.u.first      = gsub("([u])", "u", ignore.case = TRUE, data$vowel.first)
data$vowel.u.first      = gsub("([aeio])", "thr", ignore.case = TRUE, data$vowel.u.first)
unique(data$vowel.u.first)
data%>%
group_by(evolution, vowel.u.first)%>%
count()
data$vowel.u.first <- as.factor(data$vowel.u.first)
data$vowel.u.first <- relevel(data$vowel.u.first, ref = "thr")
levels(data$vowel.u.first)
system.time(model.u.first <- glmer(vowel.u.first ~ evolution + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.u.first.null <- glmer(vowel.u.first ~ 1 + (1|participant) + (1|item), data = data, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comp5 = anova(model.u.first, model.u.first.null)
p.adjust(comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
method = fdr
)
pvalues = p.adjust(comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
method = x
)
?p.adjust
pvalues = p.adjust(comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
method = "fdr"
)
comp1$"Pr(>Chisq)"
comp1$"Chisq"
comp1
comp1$"Pr"
str(comp1)
pvalues = p.adjust(comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
method = "fdr"
)
p = anova(model.u.first, model.u.first.null)$"Pr(>Chisq)"
p
pvalues = p.adjust(0.5, p,
method = "fdr"
)
pvalues = p.adjust(0.5, 0.3,
method = "fdr"
)
pvalues = p.adjust(0.5, 0.3,
method = "fdr")
pvalues
pvalues = p.adjust(0.5, 0.3, method = "fdr")
pvalues
pvalues = (comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)",
comp1$"Pr(>Chisq)"
)
pvalues = ( comp1$"Pr(>Chisq)",
comp2$"Pr(>Chisq)",
comp3$"Pr(>Chisq)",
comp4$"Pr(>Chisq)",
comp5$"Pr(>Chisq)")
pvalues = c(comp1$"Pr(>Chisq)",
comp2$"Pr(>Chisq)",
comp3$"Pr(>Chisq)",
comp4$"Pr(>Chisq)",
comp5$"Pr(>Chisq)")
pvalues
p.adjust(pvalues, method = "fdr")
data$familiarity  <- (data$fam.names + data$fam.game)/2
data$participant <- as.factor(data$participant)
data$evolution <- as.factor(data$evolution)
data.group = data%>%
group_by(participant, evolution, familiarity)%>%
summarise(mean.obs=mean(number.obstruents), mean.syllables = mean(number.syllables))
boxplot(data.group$familiarity)
hist(data.group$familiarity)
data.group <- data.group%>%
ungroup()
wide_fam  <- dcast(data.group, participant ~ evolution, value.var = c("familiarity"))
wide_obs  <- dcast(data.group, participant ~ evolution, value.var = c("mean.obs"))
wide_syl  <- dcast(data.group, participant ~ evolution, value.var = c("mean.syllables"))
data.fam = data%>%
filter(familiarity <= 3)
part.fam = data.fam%>%
group_by(participant)%>%
sample_n(1)%>%
droplevels() ## 23 participants (30)
str(part.fam)
system.time(model.pois <- glmer(number.obstruents ~ evolution + (1|participant) + (1|item), data = data.fam,family=poisson(link=log)))
system.time(model.pois.null <- glmer(number.obstruents ~ 1 + (1|participant) + (1|item), data = data.fam,family=poisson(link=log)))
anova(model.pois, model.pois.null)
system.time(model.ztpois <- glmmTMB(number.syllables ~ evolution + (1|participant) + (1|item), data = data.fam,family=truncated_poisson))
system.time(model.ztpois.null <- glmmTMB(number.syllables ~ 1 + (1|participant) + (1|item), data = data.fam,family=truncated_poisson))
anova(model.ztpois, model.ztpois.null)
data.fam$vowel.a.first <- as.factor(data.fam$vowel.a.first)
data.fam$vowel.a.first <- relevel(data.fam$vowel.a.first, ref = "other")
levels(data.fam$vowel.a.first)
system.time(model.a.first <- glmer(vowel.a.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.a.first.null <- glmer(vowel.a.first ~ 1 + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
anova(model.a.first, model.a.first.null)
data.fam$vowel.e.first <- as.factor(data.fam$vowel.e.first)
data.fam$vowel.e.first <- relevel(data.fam$vowel.e.first, ref = "thr")
levels(data.fam$vowel.e.first)
system.time(model.e.first <- glmer(vowel.e.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.e.first.null <- glmer(vowel.e.first ~ 1 + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
anova(model.e.first, model.e.first.null)
data.fam$vowel.o.first <- as.factor(data.fam$vowel.o.first)
data.fam$vowel.o.first <- relevel(data.fam$vowel.o.first, ref = "thr")
levels(data.fam$vowel.o.first)
system.time(model.o.first <- glmer(vowel.o.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.o.first.null <- glmer(vowel.o.first ~ 1 + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
anova(model.o.first, model.o.first.null)
comp4 = summary(model.i.first)
data.fam$vowel.i.first <- as.factor(data.fam$vowel.i.first)
data.fam$vowel.i.first <- relevel(data.fam$vowel.i.first, ref = "thr")
data.fam$vowel.i.first <- as.factor(data.fam$vowel.i.first)
data.fam$vowel.i.first <- relevel(data.fam$vowel.i.first, ref = "thr")
levels(data.fam$vowel.o.first)
system.time(model.i.first <- glmer(vowel.i.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.i.first.null <- glmer(vowel.i.first ~ 1 + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comp3 = anova(model.i.first, model.i.first.null)
comp3
comp4 = anova(model.o.first, model.o.first.null)
comp4
data.fam$vowel.u.first <- as.factor(data.fam$vowel.u.first)
data.fam$vowel.u.first <- relevel(data.fam$vowel.u.first, ref = "thr")
levels(data.fam$vowel.o.first)
system.time(model.u.first <- glmer(vowel.u.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
levels(data.fam$vowel.u.first)
system.time(model.u.first <- glmer(vowel.u.first ~ evolution + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
system.time(model.u.first.null <- glmer(vowel.u.first ~ 1 + (1|participant) + (1|item), data = data.fam, family=binomial(link="logit"), control = glmerControl(optimizer = "bobyqa")))
comp4 = anova(model.u.first, model.u.first.null)
comp5 = anova(model.u.first, model.u.first.null)
comp5
pvalues = c(comp1$"Pr(>Chisq)",
comp2$"Pr(>Chisq)",
comp3$"Pr(>Chisq)",
comp4$"Pr(>Chisq)",
comp5$"Pr(>Chisq)")
p.adjust(pvalues, method = "fdr")
levels(data$vo)
levels(data$syll)
prop1 = prop.test(189, 1121, p=0.33)
names(prop1)
install.packages("kableExtra")
setwd("~/Documents/Mahayana/academics/cursos/introstatistics/Aulas/Aula7/")
camara.sample = read.csv("camara_sample.csv")
setwd("~/Documents/Mahayana/academics/cursos/introstatistics/datasets/")
gas = read_excel("gas.xlsx")
Baumannstrat = read_excel("Baumann_strat.xlsx")
covariaveis = read_excel("Covariaveis.xlsx")
gas = read_excel("gas.xlsx")
View(gas)
boxplot(gas$gasmg)
t.test(gas$gasmg, mu=30, alternative = "less")
Baumannstrat = read_excel("Baumann_strat.xlsx")
View(Baumannstrat)
basal = Baumannstrat%>%
filter(group == "Basal")
strat = Baumannstrat%>%
filter(group == "Strat")
View(gas)
View(basal)
View(strat)
t.test(strat$post.test.1, basal$post.test.1, alternative = "greater", paired = FALSE)
covariaveis = read_excel("Covariaveis.xlsx")
View(covariaveis)
fem = covariaveis%>%
filter(SEXO.GENERO == "feminino")
masc = covariaveis%>%
filter(SEXO.GENERO == "masculino")
hist(fem$CV3PP)
hist(masc$CV3PP)
wilcox.test(fem$CV3PP, masc$CV3PP, alternative = "two.sided", paired = FALSE)
wilcox.test(fem$CV3PP, masc$CV3PP, alternative = "greater", paired = FALSE)
wilcox.test(fem$CV3PP, masc$CV3PP, alternative = "two.sided", paired = FALSE)
covariaveis%>%
group_by(SEXO.GENERO)%>%
summarise(mediana = median(CV3PP))
setwd("~/Documents/Mahayana/academics/cursos/introstatistics/Aulas/Aula7/")
camara.sample = read.csv("camara_sample.csv")
View(camara.sample)
unique(camara.sample$subquota_description)
?camara
unique(camara.sample$state)
camara.NE = camara.sample%>%
filter(state == "RN" |state ==  "PE" |state ==  "BA" | state == "SE" |state ==  "AL" |state ==  "CE" | state == "PB" | state == "PI" |state ==  "MA")
camara.SE = camara.sample%>%
filter(state == "RJ" |state == "ES" |state == "MG" | state == "SP")
camara.N = camara.sample%>%
filter(state == "AM" |state == "PA" |state == "AP" | state == "RR" | state == "RO" | state == "AC" | state == "TO")
camara.CO = camara.sample%>% filter(state == "MT" |state == "MS" |state == "GO" | state == "DF")
camara.S = camara.sample%>%
filter(state == "RS" |state == "SC" |state == "PR")
View(camara.NE)
NE.flight = camara.NE%>%
filter(subquota_description == "Flight ticket issue")
SE.flight = camara.SE%>%
filter(subquota_description == "Flight ticket issue")
boxplot(NE.flight$total_net_value, SE.flight$total_net_value)
hist(SE.flight$total_net_value)
hist(NE.flight$total_net_value)
N.flight = camara.N%>% filter(subquota_description == "Flight ticket issue")   boxplot(N.flight$total_net_value, NE.flight$total_net_value)
N.flight = camara.N%>% filter(subquota_description == "Flight ticket issue")
hist(N.flight$total_net_value)
RN.meal = camara.sample%>%
filter(subquota_description == "Congressperson meal", state == "RN")
PB.meal = camara.sample%>%
filter(subquota_description == "Congressperson meal", state == "PB")
hist(RN.meal$total_net_value)
hist(PB.meal$total_net_value)
RN.meal = RN.meal%>%
mutate(log.value = log(total_net_value))
PB.meal = PB.meal%>%
mutate(log.value = log(total_net_value))
View(RN.meal)
hit(RN.meal$log.value)
hist(RN.meal$log.value)
?pairwise.t.test
camara.flight = camara.sample%>%
filter(subquota_description=="Flight ticket issue")
pairwise.t.test(camara.flight$total_net_value, camara.flight$state, paired = F)
NE.meal = camara.ne%>%
filter(subquota_description== "Congressperson meal")
NE.meal = camara.NE%>%
filter(subquota_description== "Congressperson meal")
SE.meal = camara.NE%>%
filter(subquota_description== "Congressperson meal")
boxplot(NE.meal$total_net_value, SE.meal$total_net_value)
View(NE.meal)
NE.meal = camara.NE%>%
filter(subquota_description=="Congressperson meal", supplier != "VERDE VALE HOTEL S/A")
boxplot(NE.meal$total_net_value, SE.meal$total_net_value)
NE.meal = camara.NE%>%
filter(subquota_description=="Congressperson meal", supplier != "VERDE VALE HOTEL S/A")
boxplot(NE.meal$total_net_value, SE.meal$total_net_value)
SE.meal = camara.SE%>%
filter(subquota_description== "Congressperson meal")
NE.meal = camara.NE%>%
filter(subquota_description== "Congressperson meal")
SE.meal = camara.SE%>%
filter(subquota_description== "Congressperson meal")
NE.meal = camara.NE%>%
filter(subquota_description=="Congressperson meal", supplier != "VERDE VALE HOTEL S/A")
boxplot(NE.meal$total_net_value, SE.meal$total_net_value)
camara.meal = camara.sample%>%
filter(subquota_description == "Congressperson meal")
ggplot(camara.meal, aes(y=total_net_value, x = state))+
geom_boxplot(outlier.size = 2, outlier.alpha = 0.3)
